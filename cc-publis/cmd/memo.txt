<リリース時の注意>

・constantファイルのチェック
　・cc-oracle-api/app/src/config/constants.ts
　・cc-publis/src/config/constants.ts

・docker-composeファイルのチェック
　・cc-oracle-api/docker-compose.yml
    command: yarn run build:prod
    # command: yarn run dev

・ログイン、編集ボタン出し分けのコメントアウトのチェック：原則、本番環境状態にしてからcommitする
　・cc-publis/src/App.tsx
　・cc-publis/src/components/cstmDetail/CstmDetailContainer.tsx


<個別リソース＞

cc-publis-docker $ tar zcvf cc-publis-docker-secret.tar.gz --exclude ".DS_Store" ./cc-oracle-api/app/src/config/ ./cc-oracle-api/cmd/constants.js ./cc-oracle-api/oracle ./cc-publis/src/config


<コマンドメモ>

docker container start cc-oracle-api cc-auth json-server cm-spinfo-api cm-spinfo-mysql oracle-11g_oracle11g_1 redis-server
docker container stop cc-oracle-api cc-auth json-server cm-spinfo-api cm-spinfo-mysql oracle-11g_oracle11g_1 redis-server


<その他>

aclg
20936132
20933859
20977251
20977473
20981775

mdmm
22222222
33333333
44444444
20977473

hinagata

// import React, { useEffect, useCallback } from "react";
import React, { useEffect } from "react";
// import { useSelector, useDispatch } from "react-redux";
import { useSelector } from "react-redux";
// import { Actions } from "../../store/actions";
import { StoreState } from "../../../../store";

const CstmZandakaHistoryContainer: React.FC = () => {
  const authState = useSelector((state: StoreState) => state.auth);
  // const dispatch = useDispatch();

  useEffect(() => {
    console.log("CstmZandakaHistoryContainer render!");
    return () => console.log("unmounting...");
  }, []);

  return (
    <>
      <h2>{authState.userID}</h2>
      <h2>顧客残高履歴</h2>
    </>
  );
};

export default CstmZandakaHistoryContainer;
